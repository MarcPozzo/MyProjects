+ find again the things to send shot.GetJSONMarkers() and map.GetJSONMarkers()
+ add a button like in exampleSend.html to send it
+ adapt the ajax-test.php to receive it 
+ save it in adequate place 
+ add timestamp to positionning, not to loose it
+ video stream to set up
+ make index.html index.php -> start/stop motion and take still image for the positionning
+ add gps positionning with device
+ easy change of photo
+ add an index.php pointing to positionning page and remove the fake index.php
+ easy change of map (possiblement utiliser l'internet avec vrai leaflet/google map ?)
+ php/nginx server on pi (test https://github.com/shaula/rpi-php7-fpm) 
- add energy saving button to interface
- adapt motion launch ... to be runable both on pi and ubuntu
- make annotating tools : other page that presents differences two by two (the former and the current) with buttons in the middle corresponding to classes 
- import positionning info in python analysis (last version) and make a matrix of pixel distances
- add possibility to upload map/photo to annotate existing photos...

- add start/stop time lapse or time-lapse/analysis vs. motion mecanism on index.php...
  includes economy/normal mode, allow to choose analysis or simple economical time-lapse

- get a https server to avoid issues with lat/long (https://medium.freecodecamp.org/how-to-get-https-working-on-your-local-development-environment-in-5-minutes-7af615770eec)

- check usability on tablet
- position automatically C on lat/long if available
- editable gps positionning 
- reset button on positionning -> reload photo and reset markers (and set size of the image accessible for js in positionning
- upload marker file
- make logs of bashServer.py to work

- prevent overflow of the post request to ajax-save.php
